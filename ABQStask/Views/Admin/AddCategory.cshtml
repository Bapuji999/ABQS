@model ABQStask.CommandModel.CategoryComandModel

@{
    ViewData["Title"] = "Add Category";
}

<h1>Add Category</h1>

@using (Html.BeginForm("AddCategory", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "addCategoryForm" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.CategoryName)
        <br />
        @Html.TextBoxFor(m => m.CategoryName, new { @class = "form-control", required = "required" })
        <br />
        @Html.ValidationMessageFor(m => m.CategoryName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CategoryImage)
        <input type="file" id="CategoryImage" name="CategoryImage" accept="image/*" required>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Add Category</button>
}

@section Scripts {
    <script>
        // Handle form submission
        document.getElementById('addCategoryForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent default form submission

            var formData = new FormData(this);

            try {
                var response = await fetch('@Url.Action("AddCategory", "Admin")', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    // Show success message
                    alert('Category added successfully!');
                    // Redirect to home page
                    window.location.href = '@Url.Action("Index", "Home")';
                } else {
                    throw new Error('Failed to add category: ' + response.statusText);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error: ' + error.message);
            }
        });
    </script>
}
