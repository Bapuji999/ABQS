@model ABQStask.CommandModel.AddProductCommandModel

@{
    ViewData["Title"] = "Add Product";
}

<h1>Add Product</h1>

@using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.ProductName)
        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(m => m.CategoryId)
        @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "CategoryId", "CategoryName", "Category"), "-- Select Category --", new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", required = "required", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(m => m.ProductImage)
        <input type="file" id="ProductImage" name="ProductImage" accept="image/*" required>
        @Html.ValidationMessageFor(m => m.ProductImage, "", new { @class = "text-danger" })
    </div>
    <br />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <button type="submit" class="btn btn-primary">Add Product</button>
}

